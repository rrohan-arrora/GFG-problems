class GFG {
    
     /*public static int totalSubseqCombSingleSupply(String str, int idx, String psf) {
        if(idx==str.length()){
            System.out.println(psf);
            return 1;
        }
        int count=0;
        for(int i=idx;i<str.length();i++){
            count+=totalSubseqCombSingleSupply(str, idx+1, psf+str.charAt(i));
        }
        
        return count;
        
    }*/
    
    /*public static int totalSubseqSingleCoinComb(String str, int idx, String psf){
        if(idx==str.length()){
        System.out.println(psf);
            return 1;
        }
        
        int count=0;
        count+=totalSubseqSingleCoinComb(str, idx+1, psf+str.charAt(idx));
        count+=totalSubseqSingleCoinComb(str, idx+1, psf);
        
        return count;
    }*/
    
    /*public static int totalSubseqInfiCoinComb(int[] arr, int target, int idx, String psf){
        if(target==0 || idx==arr.length){
            if(target==0){
                System.out.println(psf);
                return 1;
            }
            return 0;
        }
        
        int count=0;
        if(target-arr[idx]>=0){
            count+=totalSubseqInfiCoinComb(arr, target-arr[idx], idx, psf+arr[idx]);
            count+=totalSubseqInfiCoinComb(arr, target, idx+1, psf);
        }
        
        
        return count;
    }*/
    
    /*public static int totalSubseqInfiCoinPerm(int[] arr, int target, int idx, String psf){
        if(target==0 || idx==arr.length){
            if(target==0){
                System.out.println(psf);
                return 1;
            }
            return 0;
        }
        
        int count=0;
        if(target-arr[idx] >=0){
            count+=totalSubseqInfiCoinPerm(arr, target-arr[idx], 0, psf+arr[idx]);
            count+=totalSubseqInfiCoinPerm(arr, target, idx+1, psf);
        }
        
        
        return count;
    }*/
    
	public static int totalSubseqSingleCoinPerm(int[] arr, int target, int idx, String psf){
        if(target==0 || idx==arr.length){
            if(target==0){
                System.out.println(psf);
                return 1;
            }
            return 0;
        }
        
        int count=0;
        if(target-arr[idx] >=0 ){
            if(arr[idx]>0){
                int val = arr[idx]; 
                arr[idx] = -val;
                count+=totalSubseqSingleCoinPerm(arr, target-val, 0, psf+val);
                arr[idx] = val;
            
            }
            count+=totalSubseqSingleCoinPerm(arr, target, idx+1, psf);
        }
        
        
        return count;
    }
	
	public static void main (String[] args) {
		// System.out.println(totalSubseq("abc", 0, ""));
		// System.out.println(totalSubseqCombSingleSupply("abc", 0, ""));
		int arr[] = {2, 3, 5, 7};
		//System.out.println(totalSubseqInfiCoinComb(arr, 10, 0, ""));
		System.out.println(totalSubseqSingleCoinPerm(arr, 10, 0, ""));
	}
}
