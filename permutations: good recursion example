public List<String> find_permutation(String str) {
        if(str.length()==0){
            List<String> base = new ArrayList<>();
            base.add("");
            
            return base;
        }
        
        List<String> myAns = new ArrayList<>();
        boolean arr[]= new boolean[26]; // very good recursion practice
        for(int i=0;i<str.length();i++){
            char c = str.charAt(i);
            
            if(!arr[c-'a']){
                arr[c-'a']=true;
                String remStr = str.substring(0, i)+str.substring(i+1, str.length());
                List<String> smallAns = find_permutation(remStr);
                for(String s: smallAns){
                    myAns.add(c+s);
                }
            }
            
        }
        
        return myAns;
    }
